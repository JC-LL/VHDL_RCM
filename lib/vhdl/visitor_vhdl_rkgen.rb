# ============================================================
# This code was generated by rkgen utility.
# DO NOT MODIFY !
# ============================================================
 
module VHDL
 
  class Visitor
    def visit ast
      puts "visiting ast #{ast}"
      ast.accept(self)
    end
     
    def visitDesignUnit(designunit_,args=nil)
      designunit_.elements.each{|element_| element_.accept(self,args)}
    end
     
    def visitEntity(entity_,args=nil)
      entity_.generics.each{|generic_| generic_.accept(self,args)}
      entity_.name.accept(self,args)
      entity_.ports.each{|port_| port_.accept(self,args)}
    end
     
    def visitGeneric(generic_,args=nil)
      generic_.name.accept(self,args)
      generic_.type.accept(self,args)
      generic_.init.accept(self,args)
    end
     
    def visitPort(port_,args=nil)
      port_.name.accept(self,args)
      port_.direction.accept(self,args)
      port_.type.accept(self,args)
    end
     
    def visitArchitecture(architecture_,args=nil)
      architecture_.name.accept(self,args)
      architecture_.entity_name.accept(self,args)
      architecture_.decls.each{|decl_| decl_.accept(self,args)}
      architecture_.body.accept(self,args)
    end
     
    def visitSignal(signal_,args=nil)
      signal_.name.accept(self,args)
      signal_.type.accept(self,args)
      signal_.init.accept(self,args)
    end
     
    def visitConstant(constant_,args=nil)
      constant_.name.accept(self,args)
      constant_.type.accept(self,args)
      constant_.expr.accept(self,args)
    end
     
    def visitBody(body_,args=nil)
      body_.stmts.each{|stmt_| stmt_.accept(self,args)}
    end
     
    def visitSigAssign(sigassign_,args=nil)
      sigassign_.lhs.accept(self,args)
      sigassign_.rhs.accept(self,args)
    end
     
    def visitInstanciation(instanciation_,args=nil)
      instanciation_.iname.accept(self,args)
      instanciation_.ename.accept(self,args)
      instanciation_.aname.accept(self,args)
      instanciation_.genericMap.accept(self,args)
      instanciation_.portMap.accept(self,args)
    end
  end # visitor
end # VHDL
